version: '3.7'
services:

  ## Domain
  frontend-service:
    build: ../application/frontend
    image: localhost:5000/dima_frontend
    depends_on:
      - registry
      - fluentd
    ports:
      - 80:80
    deploy:
      #replicas: 5
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: any
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imageorchestrator-service:
    build: ../application/imageorchestrator
    image: localhost:5000/dima_imageorchestrator
    depends_on:
      - registry
      - fluentd
    ports:
      - 8080:8080
    deploy:
      #replicas: 5
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: any
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imageholder-service:
    build: ../application/imageholder
    image: localhost:5000/dima_imageholder
    depends_on:
      - registry
      - mongodb
      - fluentd
    ports:
      - 8081:8080
    deploy:
      #replicas: 5
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: any
      resources:
        limits:
          memory: 1g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imagerotator-service:
    build: ../application/imagerotator
    image: localhost:5000/dima_imagerotator
    depends_on:
      - registry
      - fluentd
    ports:
      - 8082:8080
    deploy:
      #replicas: 5
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: any
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imagegrayscale-service:
    build: ../application/imagegrayscale
    image: localhost:5000/dima_imagegrayscale
    depends_on:
      - registry
      - fluentd
    ports:
      - 8083:8080
    deploy:
      #replicas: 5
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: any
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imageresize-service:
    build: ../application/imageresize
    image: localhost:5000/dima_imageresize
    depends_on:
      - registry
      - fluentd
    ports:
      - 8084:8080
    deploy:
      #replicas: 5
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: any
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imageflip-service:
    build: ../application/imageflip
    image: localhost:5000/dima_imageflip
    depends_on:
      - registry
      - fluentd
    ports:
      - 8085:8080
    deploy:
      #replicas: 5
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: any
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imagethumbnail-service:
    build: ../application/imagethumbnail
    image: localhost:5000/dima_imagethumbnail
    depends_on:
      - registry
      - fluentd
    ports:
      - 8080
    deploy:
      #replicas: 5
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: any
      resources:
        limits:
          memory: 4g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  traffic-gen:
    build: ../infrastructure/traffic-gen
    image: localhost:5000/dima_traffic-gen
    depends_on:
      - registry
      - fluentd
      - imageholder
      - imageorchestrator
    deploy:
      restart_policy:
        condition: on-failure
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  ## Storage

  # database
  mongodb:
    image: mongo:3.2.12
    # See https://github.com/docker-library/docs/tree/master/mongo#setting-wiredtiger-cache-size-limits
    command: "--wiredTigerCacheSizeGB 2"
    depends_on:
      - registry
      - fluentd
    ports:
      - '27017'
    volumes:
      - olly-mongodb:/data/db
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  mongodb-exporter:
    image: maibornwolff/mongodb_exporter
    depends_on:
      - registry
    ports:
      - 9001:9001
    command: '-mongodb.uri mongodb://mongodb:27017'

  ## Logging

  # log collector
  fluentd:
    build: ../infrastructure/fluentd
    image: localhost:5000/fluentd
    command: -qq
    depends_on:
      - registry
      - elasticsearch
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - /var/lib/docker/containers/:/mnt/var/log/docker/containers/:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  loki:
    image: grafana/loki:$LOKI_VERSION
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    depends_on:
      - registry

  # search engine, storage
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    depends_on:
      - registry
    ports:
      - 9200:9200
    env_file:
      - .elasticsearch.env
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - olly-elasticsearch:/usr/share/elasticsearch/data

  elasticsearch-exporter:
    image: justwatch/elasticsearch_exporter:1.0.2
    depends_on:
      - registry
      - elasticsearch
    ports:
      - 9108:9108
    deploy:
      restart_policy:
        condition: any
    command:
      - '-es.uri=http://elasticsearch:9200'

  kibana-index:
    build: ../infrastructure/kibana-index
    image: localhost:5000/kibana-index
    depends_on:
      - registry
      - kibana
      - elasticsearch
    deploy:
      restart_policy:
        condition: on-failure

  # logs visualizer
  kibana:
    build: ../infrastructure/kibana
    image: localhost:5000/kibana
    depends_on:
      - registry
      - elasticsearch
    ports:
      - 5601:5601
    deploy:
      restart_policy:
        condition: any

    volumes:
      - olly-prometheus:/prometheus

  apm-server:
    build: ../infrastructure/apm-server
    image: localhost:5000/apm-server
    depends_on:
      - registry
      - elasticsearch
    ports:
      - 8200:8200

  ## Monitoring

  # metricbeat
  metricbeat:
    build: ../infrastructure/metricbeat
    image: localhost:5000/metricbeat
    user: root
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    depends_on:
      - registry
      - kibana
      - elasticsearch
    restart: on-failure
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - olly-metricbeat:/usr/share/metricbeat/data
    env_file:
      - .metricbeat.env
    # disable strict permission checks

  heartbeat:
    build: ../infrastructure/heartbeat
    image: localhost:5000/heartbeat
    user: root
    # disable strict permission checks
    command: ["--strict.perms=false"]
    depends_on:
      - registry
      - kibana
      - elasticsearch

  # metrics collector
  prometheus:
    build: ../infrastructure/prometheus
    image: localhost:5000/prometheus
    depends_on:
      - registry
    ports:
      - 9090:9090

  # monitoring visualizer
  grafana:
    build: ../infrastructure/grafana
    image: localhost:5000/grafana
    depends_on:
      - registry
      - fluentd
    ports:
      - 3000:3000
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  # exporters
  node-exporter:
    image: prom/node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    depends_on:
      - registry
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  cadvisor: # docker daemon metrics exporter
    image: google/cadvisor
    depends_on:
      - registry
    ports:
      - 9110:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  nginx-exporter:
    image: sophos/nginx-vts-exporter:latest
    environment:
    - NGINX_STATUS="http://localhost/status/format/json"
    depends_on:
      - registry

  ## Tracing

  # Trace UI
  zipkin:
    image: openzipkin/zipkin:2.17
    depends_on:
      - registry
      - elasticsearch
    ports:
      - 9411:9411
    env_file:
      - .zipkin.env

  zipkin-dependencies:
    image: openzipkin/zipkin-dependencies
    depends_on:
      - registry
      - elasticsearch
    ports:
      - 9412:9412
    env_file:
      - .zipkin.env

  # Docker registry for the cluster
  registry:
    image: registry:2
    ports:
      - "5000:5000"
    deploy:
      restart_policy:
        condition: any
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    volumes:
      - olly-registry:/data


volumes:
  olly-elasticsearch:
    driver: local
  olly-mongodb:
    driver: local
  olly-prometheus:
    driver: local
  olly-metricbeat:
    driver: local
  olly-registry:
    driver: local